name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code from the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Python 3.10
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Step 3: Set up Node.js (for the frontend build)
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16' # Specify the Node.js version as needed

    # Step 4: Install dependencies via Makefile
    - name: Install dependencies via Makefile
      run: |
        make install  # Use the install command from the Makefile to install backend and frontend dependencies

    # Step 5: Build the frontend using Makefile
    - name: Build frontend
      run: |
        make build-frontend  # This will run `npm run build` as defined in your Makefile

    # Step 6: Lint with flake8 (this is from your original outline)
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Step 7: Test with pytest (this is from your original outline)
    - name: Test with pytest
      run: |
        pytest

    # Step 8: Run Flask Application (optional for integration test)
    - name: Run Flask Application
      env:
        FLASK_APP: backend/app.py
      run: |
        make run &  # Run the app in the background
        sleep 5  # Give it time to start
        curl http://127.0.0.1:3000/  # Check if the app is running on port 3000

    # Optional: Clean up after tests and builds (remove virtual environment, node_modules, etc.)
    - name: Clean up
      run: |
        make clean
